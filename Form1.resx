<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>